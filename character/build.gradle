plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

}
apply from: '../dependencies.gradle'

android {
    def globalConfiguration = project.extensions.getByName("ext")

    buildToolsVersion globalConfiguration["buildToolsVersion"]
    compileSdkVersion globalConfiguration["targetSdkVersion"]

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        minSdkVersion globalConfiguration["minSdkVersion"]
        targetSdkVersion globalConfiguration["compileSdkVersion"]
        versionCode globalConfiguration["versionCode"]
        versionName globalConfiguration["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testOptions.unitTests.includeAndroidResources = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        debug {}
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation androidxDependencies.values()
    implementation architectureComponentsDependencies.values()
    implementation kotlinDependencies.values()
    implementation googleDependencies.values()
    kapt googleKaptDependencies.values()
    implementation networkingDependencies.values()
    implementation imageDependencies.values()
    annotationProcessor imageAnnotationDependencies.values()

    implementation project(':core')
}
